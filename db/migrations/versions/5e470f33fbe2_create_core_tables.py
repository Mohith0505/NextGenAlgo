
"""create core tables

Revision ID: 5e470f33fbe2
Revises: 
Create Date: 2025-09-19 03:42:56.342988
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5e470f33fbe2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('owner', 'admin', 'trader', 'viewer', name='user_role'), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'blocked', name='user_status'), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('brokers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('broker_name', sa.String(length=100), nullable=False),
    sa.Column('client_code', sa.String(length=64), nullable=False),
    sa.Column('session_token', sa.String(length=512), nullable=True),
    sa.Column('status', sa.Enum('connected', 'expired', 'error', name='broker_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.Enum('auth', 'order', 'rms', 'broker', 'system', name='log_type'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rms_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('max_loss', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('max_lots', sa.Integer(), nullable=True),
    sa.Column('profit_lock', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('trailing_sl', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strategies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Enum('built_in', 'custom', 'connector', name='strategy_type'), nullable=False),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('active', 'stopped', name='strategy_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan', sa.Enum('trial', 'monthly', 'yearly', name='subscription_plan'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('active', 'expired', 'cancelled', name='subscription_status'), nullable=False),
    sa.Column('payment_ref', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workspaces',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('broker_id', sa.UUID(), nullable=False),
    sa.Column('margin', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['broker_id'], ['brokers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('strategy_id', sa.UUID(), nullable=True),
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('side', sa.Enum('buy', 'sell', name='order_side'), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('order_type', sa.Enum('market', 'limit', name='order_type'), nullable=False),
    sa.Column('price', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('status', sa.Enum('pending', 'filled', 'cancelled', 'rejected', name='order_status'), nullable=False),
    sa.Column('broker_order_id', sa.String(length=100), nullable=True),
    sa.Column('tp_price', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('sl_price', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=100), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('avg_price', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('pnl', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('fill_price', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('pnl', sa.Numeric(precision=18, scale=2), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_table('positions')
    op.drop_table('orders')
    op.drop_table('accounts')
    op.drop_table('workspaces')
    op.drop_table('subscriptions')
    op.drop_table('strategies')
    op.drop_table('rms_rules')
    op.drop_table('logs')
    op.drop_table('brokers')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
